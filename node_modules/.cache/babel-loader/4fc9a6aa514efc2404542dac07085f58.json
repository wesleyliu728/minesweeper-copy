{"ast":null,"code":"var _jsxFileName = \"/Users/wesleyliu/minesweeper-project/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.handleClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: this.props.gameboard,\n      shown: Array(this.props.xval * this.props.yval).fill(false)\n    };\n  }\n\n  generateSquare(value) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.state.shown[value] ? this.props.board[value] : null,\n      handleClick: () => this.handleClick(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n  handleClick(val) {\n    const curr = this.state.shown.slice();\n    curr[val] = true;\n    console.log(curr);\n    this.setState({\n      board: this.props.gameboard,\n      shown: curr\n    });\n  }\n\n  generateBoard(val1, val2) {\n    var list = [];\n\n    for (var i = 0; i <= val1 - 1; i++) {\n      list.push(i);\n    }\n\n    var list2 = [];\n\n    for (var x = 0; x <= val2 - 1; x++) {\n      list2.push(x);\n    }\n\n    return list2.map(m => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: list.map(n => {\n          return this.generateSquare(m * val1 + n);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this);\n    });\n  }\n\n  render() {\n    return this.generateBoard(this.props.xval, this.props.yval);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      xval: this.props.xval,\n      yval: this.props.yval,\n      gameboard: this.generateRandomBoard(),\n      index: 0\n    };\n  }\n\n  generateRandomBoard() {\n    var board = Array(this.props.xval * this.props.yval).fill(0);\n    getRandomInt(5, 5 + Math.floor(this.props.xval * this.props.yval / 2));\n    var bombs = 20;\n\n    while (bombs > 0) {\n      const cRow = getRandomInt(0, this.props.xval);\n      const cCol = getRandomInt(0, this.props.yval);\n      const ind = cRow * this.props.xval + cCol;\n\n      if (board[ind] !== 'B') {\n        board[ind] = 'B';\n        bombs -= 1;\n      }\n    }\n\n    console.log(board);\n\n    for (var y = 0; x <= this.props.yval - 1; y++) {\n      for (var x = 0; y <= this.props.xval - 1; x++) {\n        if (board[x * this.props.xval + y - 1] == 'B') {\n          for (var i = x - 1; i <= x + 1; i++) {\n            for (var j = y - 1; j <= y + 1; j++) {\n              if (j !== 0 && i !== 0 && j >= 0 && j < this.props.yval && i >= 0 && i < this.props.xval && board[i * this.props.xval + j] !== 'B') {\n                board[i * this.props.xval + j] += 1;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    console.log(board);\n    return board;\n  }\n\n  renderBoard() {\n    return /*#__PURE__*/_jsxDEV(Board, {\n      xval: this.state.xval,\n      yval: this.state.yval,\n      board: this.state.gameboard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    return this.renderBoard();\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Game, {\n      xval: 9,\n      yval: 9\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/wesleyliu/minesweeper-project/src/App.js"],"names":["React","ReactDOM","Square","props","handleClick","value","Board","Component","constructor","state","board","gameboard","shown","Array","xval","yval","fill","generateSquare","val","curr","slice","console","log","setState","generateBoard","val1","val2","list","i","push","list2","x","map","m","n","render","Game","generateRandomBoard","index","getRandomInt","Math","floor","bombs","cRow","cCol","ind","y","j","renderBoard","App","min","max","ceil","random"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.handleClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      board: this.props.gameboard,\n      shown: Array(this.props.xval * this.props.yval).fill(false),\n    };\n  }\n  generateSquare(value){\n    return (<Square\n      value = {this.state.shown[value] ? this.props.board[value] : null}\n      handleClick = {() => this.handleClick(value)}\n    />);\n  }\n  handleClick(val){\n    const curr = this.state.shown.slice()\n    curr[val] = true\n    console.log(curr)\n    this.setState(\n      {\n        board:this.props.gameboard,\n        shown: curr,\n      }\n    );\n  }\n  generateBoard(val1, val2){\n    var list = [];\n    for (var i = 0; i <= val1-1; i++) {\n      list.push(i);\n    }\n    var list2 = [];\n    for (var x = 0; x <= val2-1; x++){\n      list2.push(x)\n    }\n    return(\n      list2.map((m) => {return(\n          <div className = \"board-row\">\n            {list.map((n) => {return this.generateSquare(m*(val1)+n);})}\n          </div>\n        )}\n      )\n      )\n  }\n  render(){\n    return(\n      this.generateBoard(this.props.xval,this.props.yval)\n    );\n  }\n}\n\nclass Game extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      xval:this.props.xval,\n      yval:this.props.yval,\n      gameboard: this.generateRandomBoard(),\n      index:0\n    };\n  }\n  generateRandomBoard(){\n    var board = Array(this.props.xval*this.props.yval).fill(0)\n    getRandomInt(5, 5 + Math.floor((this.props.xval*this.props.yval)/2))\n    var bombs = 20\n    while(bombs > 0){\n      const cRow = getRandomInt(0, this.props.xval)\n      const cCol = getRandomInt(0, this.props.yval)\n      const ind = cRow*this.props.xval + cCol\n      if(board[ind] !== 'B'){\n        board[ind] = 'B'\n        bombs -= 1;\n      }\n    }\n    console.log(board)\n    for (var y = 0; x <= this.props.yval-1; y++){\n      for (var x = 0; y <= this.props.xval-1; x++){\n        if(board[x*this.props.xval + y-1] == 'B'){\n          for (var i = x-1; i <= x+1; i++){\n            for (var j = y-1; j <= y+1; j++){\n              if(j !== 0 && i !== 0 && j >= 0 && j<this.props.yval && i>= 0 && i< this.props.xval && board[i*this.props.xval + j] !=='B'){\n                board[i*this.props.xval + j] += 1\n              }\n            }\n          }\n        }\n      }\n    }\n    console.log(board)\n    return board\n\n  }\n  renderBoard(){\n    return(\n      <Board\n        xval = {this.state.xval}\n        yval = {this.state.yval}\n        board = {this.state.gameboard}\n      />\n    );\n  }\n  render(){\n    return(\n      this.renderBoard()\n    );\n  }\n}\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game\n        xval = {9}\n        yval = {9}\n      />\n    </div>\n  );\n}\n\nexport default App;\n\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}"]},"metadata":{},"sourceType":"module"}