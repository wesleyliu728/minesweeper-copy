{"ast":null,"code":"var _jsxFileName = \"/Users/wesleyliu/Documents/GitHub/minesweeper-copy/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport bombpng from './0734feafc15377e9a59de0643b754d78.png';\nimport flagpng from './132-1320770_turkey-flag-flashlight-pixel-art.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Square extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square\",\n      onClick: this.props.handleClick,\n      style: {\n        background: this.props.getBackground()\n      },\n      children: this.props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: this.props.gameboard,\n      shown: Array(this.props.xval * this.props.yval).fill(false),\n      flag: Array(this.props.xval * this.props.yval).fill(false),\n      isFlagging: false\n    };\n  }\n\n  getBackground(value) {\n    if (this.state.shown[value]) {\n      return 'yellow';\n    } else {\n      return 'green';\n    }\n  }\n\n  generateSquare(value) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.state.shown[value] ? this.props.board[value] == 0 ? null : this.props.board[value] !== '!!!' ? this.props.board[value] : /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"img\",\n        src: bombpng\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 145\n      }, this) : this.state.flag[value] ? /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"img\",\n        src: flagpng\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 214\n      }, this) : null,\n      handleClick: () => this.handleClick(value),\n      getBackground: () => this.getBackground(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n  handleClick(val) {\n    var curr = this.state.shown.slice();\n\n    if (this.state.isFlagging) {\n      const flag = this.state.flag.slice();\n\n      if (this.state.shown[val] != true) {\n        flag[val] = !flag[val];\n        this.setState({\n          flag: flag\n        });\n      }\n    } else {\n      function recurse(props, val, arrived, state) {\n        if (arrived.has(val)) {\n          return;\n        }\n\n        arrived.add(val);\n\n        if (state.flag[val]) {\n          state.flag[val] = false;\n        }\n\n        if (props.board[val] == 0) {\n          curr[val] = true;\n        } else {\n          curr[val] = true;\n          return;\n        }\n\n        var y = Math.floor(val / props.xval);\n        var x = val - y * props.xval;\n\n        for (var i = x - 1; i <= x + 1; i++) {\n          for (var j = y - 1; j <= y + 1; j++) {\n            if (j >= 0 && j < props.yval && i >= 0 && i < props.xval) {\n              recurse(props, j * props.xval + i, arrived, state);\n            }\n          }\n        }\n      }\n\n      if (this.props.board[val] == 0) {\n        recurse(this.props, val, new Set(), this.state);\n      } else if (this.props.board[val] == '!!!') {\n        curr = Array(this.props.xval * this.props.yval).fill(true);\n      } else {\n        curr[val] = true;\n      }\n    }\n\n    this.setState({\n      board: this.props.gameboard,\n      shown: curr\n    });\n  }\n\n  generate_flag_button() {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"img\",\n        src: flagpng\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 16\n      }, this),\n      handleClick: () => this.handleFlagging(),\n      getBackground: () => {\n        return 'purple';\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this);\n  }\n\n  handleFlagging() {\n    this.setState({\n      board: this.state.board,\n      shown: this.state.shown,\n      flag: this.state.flag,\n      isFlagging: !this.state.isFlagging\n    });\n  }\n\n  generate_reset_button() {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: 're',\n      handleClick: () => this.handleReset(),\n      getBackground: () => {\n        return 'blue';\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this);\n  }\n\n  handleReset() {\n    this.setState({\n      board: this.props.reset(),\n      shown: Array(this.props.xval * this.props.yval).fill(false),\n      flag: Array(this.props.xval * this.props.yval).fill(false),\n      isFlagging: false\n    });\n  }\n\n  getbombs() {\n    console.log(getOccurrence(this.props.board, '!!!'));\n    return getOccurrence(this.props.board, '!!!') - getOccurrence(this.state.flag, true);\n  }\n\n  generateBoard(val1, val2) {\n    var list = [];\n\n    for (var i = 0; i <= val1 - 1; i++) {\n      list.push(i);\n    }\n\n    var list2 = [];\n\n    for (var x = 0; x <= val2 - 1; x++) {\n      list2.push(x);\n    }\n\n    return list2.map(m => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: list.map(n => {\n          return this.generateSquare(m * val1 + n);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this);\n    });\n  }\n\n  generate_difficulty_button(xval, yval, bombcount) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"diff_button\",\n      onClick: () => {\n        this.props.diff_change(xval, yval, bombcount), this.handleReset();\n      },\n      style: {\n        background: 'aqua'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.getbombs(), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img\",\n          src: flagpng\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameboard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [this.generate_difficulty_button(10, 8, 10), this.generate_difficulty_button(18, 14, 40), this.generate_difficulty_button(24, 20, 100)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.generateBoard(this.props.xval, this.props.yval)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flagbutton\",\n        children: [this.generate_flag_button(), this.generate_reset_button()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      xval: 20,\n      yval: 15,\n      bombs: 5,\n      gameboard: null,\n      index: 0\n    };\n  }\n\n  handle_difficulty_change(xval, yval, bombcount) {\n    this.setState({\n      xval: xval,\n      yval: yval,\n      bombs: bombcount\n    });\n    this.setState({\n      gameboard: this.generateRandomBoard()\n    });\n  }\n\n  generateRandomBoard() {\n    var board = Array(this.state.xval * this.state.yval).fill(0);\n    var bombs = this.state.bombs;\n\n    while (bombs > 0) {\n      const cRow = getRandomInt(0, this.state.xval);\n      const cCol = getRandomInt(0, this.state.yval);\n      const ind = cCol * this.state.xval + cRow;\n\n      if (board[ind] !== '!!!') {\n        board[ind] = '!!!';\n        bombs -= 1;\n      }\n    }\n\n    for (var y = 0; y <= this.state.yval - 1; y++) {\n      for (var x = 0; x <= this.state.xval - 1; x++) {\n        if (board[y * this.state.xval + x] == '!!!') {\n          for (var i = x - 1; i <= x + 1; i++) {\n            for (var j = y - 1; j <= y + 1; j++) {\n              if (j >= 0 && j < this.state.yval && i >= 0 && i < this.state.xval && board[j * this.state.xval + i] !== '!!!') {\n                board[j * this.state.xval + i] += 1;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    console.log(board);\n    return board;\n  }\n\n  renderBoard() {\n    this.generateRandomBoard();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          xval: this.state.xval,\n          yval: this.state.yval,\n          board: this.generateRandomBoard(),\n          reset: () => this.setState({\n            gameboard: this.generateRandomBoard()\n          }),\n          diff_change: (x, y, z) => this.handle_difficulty_change(x, y, z)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    return this.renderBoard();\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Game, {\n        xval: 20,\n        yval: 15,\n        minbomb: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\n\nfunction getOccurrence(array, value) {\n  var count = 0;\n  array.forEach(v => v === value && count++);\n  return count;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/wesleyliu/Documents/GitHub/minesweeper-copy/src/App.js"],"names":["React","ReactDOM","bombpng","flagpng","Square","Component","constructor","props","state","render","handleClick","background","getBackground","value","Board","board","gameboard","shown","Array","xval","yval","fill","flag","isFlagging","generateSquare","val","curr","slice","setState","recurse","arrived","has","add","y","Math","floor","x","i","j","Set","generate_flag_button","handleFlagging","generate_reset_button","handleReset","reset","getbombs","console","log","getOccurrence","generateBoard","val1","val2","list","push","list2","map","m","n","generate_difficulty_button","bombcount","diff_change","Game","bombs","index","handle_difficulty_change","generateRandomBoard","cRow","getRandomInt","cCol","ind","renderBoard","z","App","min","max","ceil","random","array","count","forEach","v"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport bombpng from './0734feafc15377e9a59de0643b754d78.png'\nimport flagpng from './132-1320770_turkey-flag-flashlight-pixel-art.png'\n\nclass Square extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n\n    };\n  }\n  render(){\n    return(\n      <button className=\"square\" onClick={this.props.handleClick} style = {{background:this.props.getBackground()}}>\n        {this.props.value}\n      </button>\n    )\n  }\n}\n\nclass Board extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      board: this.props.gameboard,\n      shown: Array(this.props.xval * this.props.yval).fill(false),\n      flag: Array(this.props.xval * this.props.yval).fill(false),\n      isFlagging: false\n    };\n  }\n  getBackground(value){\n    if(this.state.shown[value]){\n      return 'yellow'\n    } else{\n      return 'green'\n    \n  }\n  }\n  generateSquare(value){\n    return (<Square\n      value = {this.state.shown[value] ? (this.props.board[value] ==  0 ? null : (this.props.board[value] !== '!!!' ? this.props.board[value] : <img className = \"img\"src = {bombpng}/>)): (this.state.flag[value] ? <img className = \"img\"src = {flagpng}/> :null)}\n      handleClick = {() => this.handleClick(value)}\n      getBackground = {() => this.getBackground(value)}\n    />);\n  }\n  handleClick(val){\n    var curr = this.state.shown.slice();\n    if(this.state.isFlagging){\n      const flag = this.state.flag.slice()\n      if (this.state.shown[val] != true){\n        flag[val] = !flag[val]\n        this.setState({\n          flag:flag,\n        })\n      }\n\n    } else{\n      function recurse(props, val, arrived, state){\n        if(arrived.has(val)){\n          return\n        }\n        arrived.add(val)\n        if(state.flag[val]){\n          state.flag[val] = false\n        }\n        if(props.board[val]== 0){\n          curr[val] = true\n        } else{\n          curr[val] = true\n          return\n        }\n        var y = Math.floor(val/props.xval)\n        var x = val - y * props.xval\n        for (var i = x-1; i <= x+1; i++){\n          for (var j = y-1; j <= y+1; j++){\n            if(j >= 0 && j<props.yval && i>= 0 && i< props.xval){\n              recurse(props, j*props.xval + i, arrived, state)\n            }\n          }\n        }\n      }\n      if (this.props.board[val] == 0){\n        recurse(this.props, val, new Set(), this.state)\n      } else if(this.props.board[val] == '!!!'){\n        curr = Array(this.props.xval*this.props.yval).fill(true)\n      } else{\n        curr[val] = true\n      }\n    }\n    this.setState(\n      {\n        board:this.props.gameboard,\n        shown: curr,\n      }\n    );\n  }\n  generate_flag_button(){\n    return (<Square\n      value = {<img className = \"img\"src = {flagpng}/>}\n      handleClick = {() => this.handleFlagging()}\n      getBackground = {() => {return 'purple'}}\n    />);\n  }\n  handleFlagging(){\n    this.setState({\n      board:this.state.board,\n      shown:this.state.shown,\n      flag:this.state.flag, \n      isFlagging: !this.state.isFlagging\n    })\n  }\n  generate_reset_button(){\n    return (<Square\n      value = {'re'}\n      handleClick = {() => this.handleReset()}\n      getBackground = {() => {return 'blue'}}\n    />);\n  }\n  handleReset(){\n    this.setState({\n      board:this.props.reset(),\n      shown: Array(this.props.xval * this.props.yval).fill(false),\n      flag: Array(this.props.xval * this.props.yval).fill(false),\n      isFlagging: false\n    })\n\n  }\n\n  getbombs(){\n    console.log(getOccurrence(this.props.board, '!!!'))\n    return getOccurrence(this.props.board, '!!!') - getOccurrence(this.state.flag, true)\n  }\n  generateBoard(val1, val2){\n    var list = [];\n    for (var i = 0; i <= val1-1; i++) {\n      list.push(i);\n    }\n    var list2 = [];\n    for (var x = 0; x <= val2-1; x++){\n      list2.push(x)\n    }\n    return(\n      list2.map((m) => {return(\n          <div className = \"board-row\">\n            {list.map((n) => {return this.generateSquare(m*(val1)+n);})}\n          </div>\n        )}\n      )\n      )\n  }\n  generate_difficulty_button(xval, yval, bombcount){\n    return(\n    <button className=\"diff_button\" onClick={() => {this.props.diff_change(xval, yval, bombcount),this.handleReset()}} style = {{background:'aqua'}}> \n    </button>\n    )\n  }\n  render(){\n    return(\n      <div>\n        <div>\n          {this.getbombs()}<img className = \"img\"src = {flagpng}/>\n        </div>\n        <div className = \"gameboard\">\n          <div>\n            {this.generate_difficulty_button(10,8,10)}\n            {this.generate_difficulty_button(18,14,40)}\n            {this.generate_difficulty_button(24,20,100)}\n          </div>\n          <div>\n          {this.generateBoard(this.props.xval,this.props.yval)}\n          </div>\n        </div>\n        <div className = \"flagbutton\">\n          {this.generate_flag_button()}\n          {this.generate_reset_button()}\n        </div>\n      \n      </div>\n\n    );\n  }\n}\n\nclass Game extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      xval: 20,\n      yval:15,\n      bombs: 5,\n      gameboard: null,\n      index:0\n    };\n  }\n\n  handle_difficulty_change(xval, yval, bombcount){\n    this.setState({\n      xval:xval,\n      yval:yval,\n      bombs:bombcount\n    })\n    this.setState({gameboard:this.generateRandomBoard()})\n  }\n\n\n  generateRandomBoard(){\n    var board = Array(this.state.xval*this.state.yval).fill(0)\n    var bombs = this.state.bombs\n    while(bombs > 0){\n      const cRow = getRandomInt(0, this.state.xval)\n      const cCol = getRandomInt(0, this.state.yval)\n      const ind = cCol*this.state.xval + cRow\n      if(board[ind] !== '!!!'){\n        board[ind] = '!!!'\n        bombs -= 1;\n      }\n    }\n    for (var y = 0; y <= this.state.yval-1; y++){\n      for (var x = 0; x <= this.state.xval-1; x++){\n        if(board[y*this.state.xval + x] == '!!!'){\n          for (var i = x-1; i <= x+1; i++){\n            for (var j = y-1; j <= y+1; j++){\n              if(j >= 0 && j<this.state.yval && i>= 0 && i< this.state.xval && board[j*this.state.xval + i] !=='!!!'){\n                board[j*this.state.xval + i] += 1\n              }\n            }\n          }\n        }\n      }\n    }\n    console.log(board)\n    return board\n\n  }\n  renderBoard(){\n    this.generateRandomBoard()\n    return(\n      <div>\n        <div>\n          <Board\n            xval = {this.state.xval}\n            yval = {this.state.yval}\n            board = {this.generateRandomBoard()}\n            reset = {() => this.setState({gameboard:this.generateRandomBoard()})}\n            diff_change = {(x,y,z) => this.handle_difficulty_change(x,y,z)}\n          />\n        </div>\n      </div>\n    );\n  }\n  render(){\n    return(\n      this.renderBoard()\n    );\n  }\n}\nfunction App() {\n\n  return (\n    <div id = \"wrapper\">\n      <div className=\"App\">\n        <Game\n          xval = {20}\n          yval = {15}\n          minbomb = {5}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\n\nfunction getOccurrence(array, value) {\n  var count = 0;\n  array.forEach((v) => (v === value && count++));\n  return count;\n}\n"]},"metadata":{},"sourceType":"module"}